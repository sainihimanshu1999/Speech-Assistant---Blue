from PyObjCTools.TestSupport import *
import CoreServices


class TestUTCoreTypes(TestCase):
    def testConstants(self):
        self.assertIsInstance(CoreServices.kUTTypeItem, unicode)
        self.assertIsInstance(CoreServices.kUTTypeContent, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCompositeContent, unicode)
        self.assertIsInstance(CoreServices.kUTTypeApplication, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMessage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeContact, unicode)
        self.assertIsInstance(CoreServices.kUTTypeArchive, unicode)
        self.assertIsInstance(CoreServices.kUTTypeDiskImage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeData, unicode)
        self.assertIsInstance(CoreServices.kUTTypeDirectory, unicode)
        self.assertIsInstance(CoreServices.kUTTypeResolvable, unicode)
        self.assertIsInstance(CoreServices.kUTTypeSymLink, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMountPoint, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAliasFile, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAliasRecord, unicode)
        self.assertIsInstance(CoreServices.kUTTypeURL, unicode)
        self.assertIsInstance(CoreServices.kUTTypeFileURL, unicode)
        self.assertIsInstance(CoreServices.kUTTypeText, unicode)
        self.assertIsInstance(CoreServices.kUTTypePlainText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeUTF8PlainText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeUTF16ExternalPlainText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeUTF16PlainText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeRTF, unicode)
        self.assertIsInstance(CoreServices.kUTTypeHTML, unicode)
        self.assertIsInstance(CoreServices.kUTTypeXML, unicode)
        self.assertIsInstance(CoreServices.kUTTypeSourceCode, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCSource, unicode)
        self.assertIsInstance(CoreServices.kUTTypeObjectiveCSource, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCPlusPlusSource, unicode)
        self.assertIsInstance(CoreServices.kUTTypeObjectiveCPlusPlusSource, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCHeader, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCPlusPlusHeader, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJavaSource, unicode)
        self.assertIsInstance(CoreServices.kUTTypePDF, unicode)
        self.assertIsInstance(CoreServices.kUTTypeRTFD, unicode)
        self.assertIsInstance(CoreServices.kUTTypeFlatRTFD, unicode)
        self.assertIsInstance(CoreServices.kUTTypeTXNTextAndMultimediaData, unicode)
        self.assertIsInstance(CoreServices.kUTTypeWebArchive, unicode)
        self.assertIsInstance(CoreServices.kUTTypeImage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJPEG, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJPEG2000, unicode)
        self.assertIsInstance(CoreServices.kUTTypeTIFF, unicode)
        self.assertIsInstance(CoreServices.kUTTypePICT, unicode)
        self.assertIsInstance(CoreServices.kUTTypeGIF, unicode)
        self.assertIsInstance(CoreServices.kUTTypePNG, unicode)
        self.assertIsInstance(CoreServices.kUTTypeQuickTimeImage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAppleICNS, unicode)
        self.assertIsInstance(CoreServices.kUTTypeBMP, unicode)
        self.assertIsInstance(CoreServices.kUTTypeICO, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAudiovisualContent, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMovie, unicode)
        self.assertIsInstance(CoreServices.kUTTypeVideo, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAudio, unicode)
        self.assertIsInstance(CoreServices.kUTTypeQuickTimeMovie, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMPEG, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMPEG4, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMP3, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMPEG4Audio, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAppleProtectedMPEG4Audio, unicode)
        self.assertIsInstance(CoreServices.kUTTypeFolder, unicode)
        self.assertIsInstance(CoreServices.kUTTypeVolume, unicode)
        self.assertIsInstance(CoreServices.kUTTypePackage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeBundle, unicode)
        self.assertIsInstance(CoreServices.kUTTypeFramework, unicode)
        self.assertIsInstance(CoreServices.kUTTypeApplicationBundle, unicode)
        self.assertIsInstance(CoreServices.kUTTypeApplicationFile, unicode)
        self.assertIsInstance(CoreServices.kUTTypeVCard, unicode)
        self.assertIsInstance(CoreServices.kUTTypeInkText, unicode)

    @min_os_level("10.10")
    def testConstants10_10(self):
        self.assertIsInstance(CoreServices.kUTTypeURLBookmarkData, unicode)
        self.assertIsInstance(CoreServices.kUTTypeDelimitedText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCommaSeparatedText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeTabSeparatedText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeUTF8TabSeparatedText, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAssemblyLanguageSource, unicode)
        self.assertIsInstance(CoreServices.kUTTypeScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAppleScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypeOSAScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypeOSAScriptBundle, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJavaScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypeShellScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypePerlScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypePythonScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypeRubyScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypePHPScript, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJSON, unicode)
        self.assertIsInstance(CoreServices.kUTTypePropertyList, unicode)
        self.assertIsInstance(CoreServices.kUTTypeXMLPropertyList, unicode)
        self.assertIsInstance(CoreServices.kUTTypeBinaryPropertyList, unicode)
        self.assertIsInstance(CoreServices.kUTTypeRawImage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeScalableVectorGraphics, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMPEG2Video, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMPEG2TransportStream, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAppleProtectedMPEG4Video, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAVIMovie, unicode)
        self.assertIsInstance(CoreServices.kUTTypeAudioInterchangeFileFormat, unicode)
        self.assertIsInstance(CoreServices.kUTTypeWaveformAudio, unicode)
        self.assertIsInstance(CoreServices.kUTTypeMIDIAudio, unicode)
        self.assertIsInstance(CoreServices.kUTTypePlaylist, unicode)
        self.assertIsInstance(CoreServices.kUTTypeM3UPlaylist, unicode)
        self.assertIsInstance(CoreServices.kUTTypePluginBundle, unicode)
        self.assertIsInstance(CoreServices.kUTTypeSpotlightImporter, unicode)
        self.assertIsInstance(CoreServices.kUTTypeQuickLookGenerator, unicode)
        self.assertIsInstance(CoreServices.kUTTypeXPCService, unicode)
        self.assertIsInstance(CoreServices.kUTTypeUnixExecutable, unicode)
        self.assertIsInstance(CoreServices.kUTTypeWindowsExecutable, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJavaClass, unicode)
        self.assertIsInstance(CoreServices.kUTTypeJavaArchive, unicode)
        self.assertIsInstance(CoreServices.kUTTypeSystemPreferencesPane, unicode)
        self.assertIsInstance(CoreServices.kUTTypeGNUZipArchive, unicode)
        self.assertIsInstance(CoreServices.kUTTypeBzip2Archive, unicode)
        self.assertIsInstance(CoreServices.kUTTypeZipArchive, unicode)
        self.assertIsInstance(CoreServices.kUTTypeSpreadsheet, unicode)
        self.assertIsInstance(CoreServices.kUTTypePresentation, unicode)
        self.assertIsInstance(CoreServices.kUTTypeToDoItem, unicode)
        self.assertIsInstance(CoreServices.kUTTypeCalendarEvent, unicode)
        self.assertIsInstance(CoreServices.kUTTypeEmailMessage, unicode)
        self.assertIsInstance(CoreServices.kUTTypeInternetLocation, unicode)
        self.assertIsInstance(CoreServices.kUTTypeFont, unicode)
        self.assertIsInstance(CoreServices.kUTTypeBookmark, unicode)
        self.assertIsInstance(CoreServices.kUTType3DContent, unicode)
        self.assertIsInstance(CoreServices.kUTTypePKCS12, unicode)
        self.assertIsInstance(CoreServices.kUTTypeX509Certificate, unicode)
        self.assertIsInstance(CoreServices.kUTTypeElectronicPublication, unicode)
        self.assertIsInstance(CoreServices.kUTTypeLog, unicode)

    @min_os_level("10.11")
    def testConstants10_11(self):
        self.assertIsInstance(CoreServices.kUTTypeSwiftSource, unicode)


if __name__ == "__main__":
    main()
